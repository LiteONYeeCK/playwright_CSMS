name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  JIRA_BASE_URL:  ${{ secrets.JIRA_BASE_URL }}
  JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
  JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
  JIRA_PROJECT: ZT

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm
      - run: npm ci

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps chromium

      - name: Install OS dependencies (cache hit)
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: npx playwright install-deps chromium

      - name: Create Jira Task
        id: jira
        run: |
          curl -sS -X POST \
            -u "${JIRA_USER_EMAIL}:${JIRA_API_TOKEN}" \
            -H "Content-Type: application/json" \
            "${JIRA_BASE_URL}/rest/api/3/issue" \
            -d "$(jq -n \
              --arg repo "${GITHUB_REPOSITORY}" \
              --arg run  "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" \
              '{
                 fields: {
                   project: { key: "ZT" },
                   summary: "CSMS workflow",
                   description: ("GitHub Actions run: " + $run),
                   issuetype: { name: "Task" }
                 }
              }')" > jira.json
          echo "issue_key=$(jq -r '.key' jira.json)" >> $GITHUB_OUTPUT

      - name: Run Playwright tests
        id: tests
        run: npx playwright test
        continue-on-error: true

      - name: Prepare env variables
        if: always()
        run: |
          echo "REPORT_URL=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV
          echo "STATUS=${{ steps.tests.outcome }}" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Send e-mail notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USER }}
          password: ${{ secrets.MAIL_PASS }}
          from: GitHub Actions <${{ secrets.MAIL_USER }}>
          to: liteonsgyeeck@gmail.com
          subject: "Playwright run ${{ env.STATUS }} on ${{ github.repository }}"
          html_body: |
            <p>Repository: <strong>${{ github.repository }}</strong></p>
            <p>Branch: <strong>${{ github.ref_name }}</strong></p>
            <p>Status: <strong style="color:${{ env.STATUS == 'success' && 'green' || 'red' }}">${{ env.STATUS }}</strong></p>
            <p>Report: <a href="${{ env.REPORT_URL }}">${{ env.REPORT_URL }}</a></p>